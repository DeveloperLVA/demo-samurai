{"version":3,"sources":["components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPostsContainer.jsx","components/common/FormsControls/FormsControls.js","api/api.js","Redux/dialogs-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","assets/images/Spinner-1s-200px.svg","components/Profile/MyPosts/Post/Post.module.css","components/User/users.module.css","assets/images/user.svg","components/Dialogs/Message/Message.jsx","components/common/Preloader/Preloader.js","serviceWorker.js","components/NavBar/NavBar.jsx","utils/object-helpers.js","Redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/User/User.jsx","components/User/Users.jsx","Redux/users-selectors.js","components/User/UsersContainer.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","Redux/profile-reducer.js","components/NavBar/NavBar.module.css"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","connect","state","posts","profilePage","newPostText","dispatch","addPost","addPostActionCreator","MyPosts","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","instance","axios","withCredentials","baseURL","headers","usersAPI","getUser","currentPage","pageSize","get","then","response","data","follow","userID","post","unfollow","delete","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","Post","s","item","src","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","React","memo","postsElement","map","p","like","createRef","postsBlock","values","Message","dialog","Preloader","style","backgroundColor","preloader","Boolean","window","location","hostname","match","NavBar","nav","to","activeClassName","activeLink","active","friends","Frie","friendsKolum","cirColor","cirkleFrend","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","selectedPage","pageNumber","key","e","User","user","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Component","compose","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","initialized","appReducer","sidebarReducer","reducers","combineReducers","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","MyPostsContainer","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","profile","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.7c2a30ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3n3Fe\",\"pageNumber\":\"Paginator_pageNumber__DcDMB\",\"selectedPage\":\"Paginator_selectedPage__3AU68\"};","export const required = value => {\r\n\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n\r\n    if (value.length > maxLength) return 'Max Length is $ {maxLength} symbols';\r\n\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Pvek\",\"posts\":\"MyPosts_posts__1FWRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__espkW\",\"error\":\"FormsControls_error__qusEK\",\"formSummaryError\":\"FormsControls_formSummaryError__3ZIqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1itR3\",\"loginBlock\":\"Header_loginBlock__1egIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__PIzYb\",\"dialogsItems\":\"Dialogs_dialogsItems__16glm\",\"active\":\"Dialogs_active__105Hf\",\"messages\":\"Dialogs_messages__3-ZuD\",\"message\":\"Dialogs_message__16uAz\"};","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default (\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)\r\n(MyPosts);\r\n\r\n","import React from 'react';\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    \r\n     return (\r\n         <div className={styles.formControl +  \" \" + ( hasError ? styles.error : \" \") }>\r\n             <div>\r\n                 {children}\r\n             </div>\r\n            { hasError &&  <span>{error}</span> } \r\n         </div>\r\n     )\r\n }\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n   \r\n    return <FormControl {...props}><textarea {...input} {...restProps} /> </FormControl>\r\n        }\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n           \r\n    return <FormControl {...props}><input {...input} {...restProps} /> </FormControl>\r\n        }\r\n\r\nexport const createField = ( placeholder, name, validators, component, props= {}, text= \"\" ) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n        validate={validators}\r\n        component={component} \r\n        {...props}\r\n        /> {text}\r\n</div> \r\n)","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,  //когда СЕРВАК даст ответ\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"ab462b32-f9f7-47d9-8063-d8d53a51fc31\"\r\n    }  // это ключь сгенерированный для меня (LVA) на сайте-сервере\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUser(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\r\n            .then(response => {\r\n                return response.data;   // - это цепочка ПРОМИСОВ (автор - тема сложная...)\r\n            });\r\n    },\r\n    follow(userID) {\r\n        return instance.post(`follow/${userID}`)  // это ключь сгенерированный для меня (LVA) на сайте-сервере\r\n\r\n    },\r\n    unfollow(userID) {\r\n        return instance.delete(`follow/${userID}`)   // это ключь сгенерированный для меня (LVA) на сайте-сервере\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n         return  profileAPI.getProfile (userId);  //когда СЕРВАК даст ответ\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return  instance.get(`profile/` + userId);  //когда СЕРВАК даст ответ\r\n    },\r\n    getStatus(userId) {\r\n        return  instance.get(`profile/status/` + userId);  //когда СЕРВАК даст ответ\r\n    },\r\n    updateStatus(status) {\r\n        return  instance.put(`profile/status`, {status: status });  //когда СЕРВАК даст ответ\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n   me () {\r\n       return instance.get(`auth/me` );  //когда СЕРВАК даст ответ\r\n   },\r\n\r\n   login (email, password, rememberMe=false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe } ); //когда СЕРВАК даст ответ\r\n},\r\n\r\nlogout () {\r\n    return instance.delete (`auth/login` );  //когда СЕРВАК даст ответ\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Viktor'},\r\n        {id: 4, name: 'Valera'},\r\n        {id: 5, name: 'Я'},\r\n        {id: 6, name: 'ТЫ'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it ?'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n        {id: 6, message: 'Привет'},\r\n        {id: 7, message: 'У меня ВРОДЕ получается ! :-)'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n    //let stateCopy; 15.02.2021\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n\r\n            let body = action.newMessageBody;  //*от автора - \"запишим это в body\" */\r\n\r\n            return  {\r\n                ...state, // копируем обьект\r\n                messages: [...state.messages, {id: 7, message: body}]  // создаём НОВЫЙ обьект массива\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})   //* от автора -  отправить сообщение *//\r\n\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://klike.net/uploads/posts/2019-03/1551511784_4.jpg' />\r\n     <span> {props.message}, </span>\r\n     <br/>\r\n     <span>like </span>{props.likesCount}\r\n       \r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from './../../../utils/validators/validators';\r\nimport {Textarea} from './../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst  maxLength10 = maxLengthCreator(10) ;\r\n\r\nlet AddNewPostForm =(props)=>  {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n            validate={[required, maxLength10]} />\r\n           \r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux =reduxForm ({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post message={p.message} like={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (<div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.e9b43964.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__e8X-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__39gHu\"};","module.exports = __webpack_public_path__ + \"static/media/user.8d15f1e7.svg\";","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return     <div className={s.dialog}>{props.message}\r\n               </div>\r\n    }\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor: (0, 125, 215, 0)}}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n{/* Начало Это друзья с кружоками- LVA*/}\r\n            <div className={s.friends}>\r\n                <div className={s.Frie}><span>Friends</span></div>\r\n                <div className={s.friendsKolum}>\r\n\r\n                    <div>\r\n                        <div className={s.cirColor}></div>\r\n                        <div className={s.cirkleFrend}>\r\n                            <NavLink to=\"/andrew\" activeClassName={s.activeLink}>Andrew</NavLink></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.cirColor}></div>\r\n                        <div className={s.cirkleFrend}>\r\n                            <NavLink to=\"/sasha\" activeClassName={s.activeLink}>Sasha</NavLink></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={s.cirColor}></div>\r\n                        <div className={s.cirkleFrend}>\r\n                            <NavLink to=\"/sveta\" activeClassName={s.activeLink}>Sveta</NavLink></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {/* Конец - друзья с кружоками- LVA*/}\r\n\r\n\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","\r\nexport const updateObjectInArray = ( items, itemId, objPropName, newObjProps ) => {\r\n   return items.map(u => {   // для отработки КОНКРЕТного юзера .map  -возвращает //\r\n    // НОВЫЙ массив на основе СТАРГО массива //\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n\r\n}\r\n\r\n","import { act } from \"@testing-library/react\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport { updateObjectInArray } from './../utils/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,  // сколько мы будем показывать Usrов на странице (в ФронтЭнде)\r\n    totalUsersCount: 0,   // кол-во ВСЕГО страниц на сервере (в БекЭнде)\r\n    currentPage: 1, // с какой страницы будет \"показ\"\r\n    isFetching: true, // картинка загрузки\r\n    followingInProgress: [],  // ДЕЗАКТИВАЦИЯ кнопки\r\n    fake: 10\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray ( state.users, action.userId, \"id\", {followed: true}  )\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray ( state.users, action.userId, \"id\", {followed: false}  )\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)   // отфильтровываем в массиве не нужных людей\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\n\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers =(page, pageSize) => {   // САНКа - это Ф-ИЯ, которая принимает метод ДИСПАТЧ (с обччными Экшинами)\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data  = await   usersAPI.getUser(page, pageSize);\r\n            dispatch(toggleIsFetching(false)); // диспатчим одячный action (toggleIsFetching)\r\n            dispatch(setUsers(data.items)); // в ответ - от  сервера прийдет ВОТ ЭТОТ респонс ...\r\n            dispatch(setUsersTotalCount(data.totalCount)); // в ответ - от  сервера прийдет ВОТ ЭТОТ респонс ...\r\n\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async ( dispatch, userId, apiMethod, actionCreator ) => {\r\n    dispatch (toggleFollowingProgress(true, userId));\r\n    let response  = await   apiMethod(userId);   \r\n\r\n            if (response.data.resultCode == 0) {\r\n                dispatch (actionCreator(userId));\r\n            }   // проверяем рузультат КОДА с СЕРВАКА\r\n\r\n            dispatch (toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow =(userId) => {   // САНКа - это Ф-ИЯ, которая принимает метод ДИСПАТЧ (с обччными Экшинами)\r\n    return async (dispatch) => {\r\n        followUnfollowFlow (dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow =(userId) => {   // САНКа - это Ф-ИЯ, которая принимает метод ДИСПАТЧ (с обччными Экшинами)\r\n    return async (dispatch) => {\r\n        followUnfollowFlow (dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n//import Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet User = ( { user, followingInProgress, unfollow, follow }) => {\r\n    \r\n    return (\r\n    <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                     className={styles.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some (id=> id === user.id)}\r\n                              onClick={() => { unfollow(user.id) }}>\r\n\r\n                        Unfollow</button>\r\n                    : < button disabled={followingInProgress.some (id=> id === user.id)}\r\n                               onClick={() => { follow(user.id) }}>\r\n\r\n                    Follow</button>}\r\n            </div>\r\n        </span>\r\n         <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n    </div>)\r\n }\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ( { currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={ currentPage } onPageChanged= {onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n        {\r\n            users.map(u => <User user={u}\r\n                followingInProgress={props.followingInProgress}\r\n                key={u.id} \r\n                unfollow={props.unfollow}\r\n                follow={props.follow}\r\n                /> \r\n            )\r\n        }\r\n        </div>\r\n</div>\r\n\r\n }\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return  state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return  users.filter( u=> true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return  state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return  state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return  state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return  state.usersPage.followingInProgress;\r\n}\r\nexport const countSomethingDifficult = (state) => {\r\n    let count = 23;\r\n    return  count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers,\r\n\r\n} from '../../Redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {   // АЯКС запрос !\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const { pageSize } = this.props ;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n          }\r\n\r\n\r\n    render() {   // props` сюда (в скобки) НЕ ПРИХОДЯТ  - возвращяет .jsx\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                 //  toggleFollowingProgress = {this.props.toggleFollowingProgress}\r\n                   followingInProgress = {this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {  // ф-ия, которая принимает ВЕСЬ СТЕЙТ ЦЕЛИКОМ (ГЛОБАЛЬНЫЙ - ВСЕГО ПРИЛОЖЕНИЯ) ! //\r\n    // и возвращает обьект только с ТЕМИ данными, которые НАМ из СТЕЙТА НУЖНЫ //\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n//  let withRedirect =  withAuthRedirect(UsersContainer);   // HOC c Redirectom\r\n\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers,\r\n    })\r\n) \r\n(UsersContainer );","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n const Header = (props) => {\r\n     return  <header className={s.header} >\r\n        <img src='https://static.rfstat.com/renderforest/images/v2/logo-homepage/embleme_3.png'></img> \r\n\r\n         <div className={s.loginBlock}>\r\n             {props.isAuth \r\n             ? <div> {props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n             : <NavLink to={'/login'}>LOGIN</NavLink> }\r\n         </div>\r\n     </header>\r\n }\r\n\r\n export default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport {authAPI} from \"../api/api\";\r\n// import Message from './../components/Dialogs/Message/Message';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                \r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth ) => ({type: SET_USER_DATA, payload:\r\n    { userId, email, login, isAuth }  });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response  = await  authAPI.me();  // это DAL уровень\r\n       \r\n            if ( response.data.resultCode === 0 ) {\r\n                let { id, login, email } = response.data.data;\r\n                dispatch (setAuthUserData (id, email, login, true));\r\n            }\r\n    }\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response  = await  authAPI.login(email, password, rememberMe);  // это DAL уровень\r\n       \r\n            if ( response.data.resultCode === 0 ) {\r\n                dispatch(getAuthUserData())\r\n            }  else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0]: \"Some error\";\r\n                     dispatch ( stopSubmit (\"login\", {_error: message}));\r\n            }\r\n       }\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response  = await  authAPI.logout();  // это DAL уровень\r\n        \r\n            if ( response.data.resultCode === 0 ) {\r\n                dispatch (setAuthUserData (null, null, null, false));\r\n            }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\n//import * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n//import {authAPI} from \"../../api/api\";\r\nimport { compose } from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header{...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n /* export default connect (mapStateToProps, {getAuthUserData} )  ( HeaderContainer ); */\r\n\r\n export default compose (connect (mapStateToProps, {logout} )) (HeaderContainer);","import {initialize, stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/api\";\r\nimport Message from './../components/Dialogs/Message/Message';\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                \r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n       let promise = dispatch(getAuthUserData());\r\n        Promise.all ([promise])\r\n            .then(()=>{\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import profileReducer from \"./profile-reducer\";\r\n\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from  \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({   // это наша \"общая колекция\" редюссеров\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware) ));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from './../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\n    return (props)=> {\r\n        return <React.Suspense fallback={<div><Preloader /></div>} >   \r\n            < Component {...props} /> \r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport {withRouter, Route} from \"react-router-dom\";\r\n\r\nimport MyPostsContainer from \"./components/Profile/MyPosts/MyPostsContainer\"\r\nimport UsersContainer from \"./components/User/UsersContainer\";\r\n\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized)\r\n        {return  <Preloader />\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <NavBar/>\r\n                <div className='app-wrapper-content'>\r\n\r\n                    <Route path='/dialogs'\r\n                           render= { withSuspense ( DialogsContainer ) } />\r\n                            \r\n                    <Route path='/profile/:userId?'   \r\n                           render= { withSuspense ( ProfileContainer ) } />\r\n                           \r\n                    <Route path='/news'\r\n                           render= { withSuspense ( DialogsContainer ) } />\r\n\r\n                    <Route path='/music'\r\n                           render= { withSuspense ( DialogsContainer ) } />\r\n\r\n                    <Route path='/settings'\r\n                           render={() => <MyPostsContainer/>}/>\r\n\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose (\r\n    withRouter,\r\n    connect (mapStateToProps, {initializeApp})) (App);\r\n\r\nconst    SamuraiJSApp = (props) => {\r\n        \r\n        //<React.StrictMode>\r\n      return  <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <AppContainer />\r\n                </Provider>\r\n            </BrowserRouter>\r\n        // </React.StrictMode>,\r\n    }\r\n\r\n    export default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\n\r\n\r\n\r\n    ReactDOM.render( <SamuraiJSApp/> , document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import Preloader from \"../components/common/Preloader/Preloader\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you', likesCount: 15},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 1},\r\n        {id: 3, message: 'Yo', likesCount: 7},\r\n        {id: 4, message: 'Yo---', likesCount: 3},\r\n        {id: 5, message: 'Привет', likesCount: 11}\r\n    ],\r\n\r\n    profile: null,\r\n    status: \" \"\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };  // копируем обьект\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };  // копируем обьект\r\n        }\r\n\r\n        case SET_USER_PROFILE:{\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {\r\n    ...state, posts: state.posts.filter(p=> p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\n\r\nexport const setUserProfile = (profile)=> ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status)=> ({type: SET_STATUS, status})\r\n\r\nexport const deletePost = (postId)=> ({type: DELETE_POST, postId})\r\n\r\n\r\nexport const getUserProfile = (userId)=> async (dispatch) => {\r\n    const response  = await   usersAPI.getProfile(userId);\r\n            dispatch (setUserProfile(response.data));     // в ответ - от  сервера прийдет ВОТ ЭТОТ респонс ...\r\n}\r\n\r\nexport const getStatus = (userId)=> async (dispatch) => {\r\n    let response  = await profileAPI.getStatus(userId); \r\n        dispatch (setStatus(response.data));     // в ответ - от  сервера прийдет ВОТ ЭТОТ респонс ...\r\n}\r\n\r\n\r\nexport const updateStatus = (status)=> async (dispatch) => {\r\n    let response  = await  profileAPI.updateStatus(status); \r\n    if (response.data.resultCode === 0) {    \r\n        dispatch (setStatus(status));     // в ответ - от  сервера прийдет ВОТ ЭТОТ респонс ...\r\n        }\r\n }\r\n\r\n\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2z2RM\",\"item\":\"NavBar_item__Qd4mB\",\"activeLink\":\"NavBar_activeLink__37zrP\",\"friendsKolum\":\"NavBar_friendsKolum__3mKPS\",\"friends\":\"NavBar_friends__3oC8L\",\"Frie\":\"NavBar_Frie__DAyMt\",\"cirkleFrend\":\"NavBar_cirkleFrend__zt7ew\",\"cirColor\":\"NavBar_cirColor__3e47M\"};"],"sourceRoot":""}